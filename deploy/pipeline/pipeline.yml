apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: microsweeper
spec:
  params:
    - default: 'https://github.com/fjcloud/microsweeper-quarkus'
      description: git repository of app
      name: GIT_REPO
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: userHome
          value: /tekton/home
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: main
    - name: deploy-app
      params:
        - name: SCRIPT
          value: oc apply -f deploy
        - name: VERSION
          value: latest
      runAfter:
        - buildah
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: main
    - name: set-image
      params:
        - name: SCRIPT
          value: >-
            oc annotate --overwrite deployment microsweeper
            image.openshift.io/triggers='[{"from":{"kind":"ImageStreamTag","name":"microsweeper-quarkus:$(tasks.git-clone.results.commit)"},"fieldPath":"spec.template.spec.containers[?(@.name==\"app\")].image"}]'
        - name: VERSION
          value: latest
      runAfter:
        - deploy-app
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: buildah
      params:
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/microsweeper-quarkus:$(tasks.git-clone.results.commit)
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
        - name: SKIP_PUSH
          value: 'false'
      runAfter:
        - git-clone
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: main
  workspaces:
    - name: main
